library(blogdown)
library(bookdown)
serve_site()
blogdown:::new_post_addin()
knitr::opts_chunk$set(echo = TRUE)
source('../../../sfc/gen_steady_todo.R')
library(tidyverse)
library(formula.tools)
library(catchr)
source('../../../sfc/gen_steady_todo.R')
##### Not in operator
'%!in%' <- function(x,y)!('%in%'(x,y))
households <- list(
eh1 <- TX_s[t] ~ TX_d[t],
eh2 <- YD[t] ~ W * N_s[t] - TX_s[t],
eh3 <- C_d[t] ~ parh2 * YD[t] + parh3 * H_h[t-1],
eh4 <- H_h[t] ~ YD[t] - C_d[t] + H_h[t-1],
eh5 <- N_s[t] ~ N_d[t]
)
production <- list(
ep1 <- N_d[t] ~ Y[t] / W,
ep2 <- C_s[t] ~ C_d[t],
ep3 <- G_s[t] ~ G_d[t],
ep4 <- Y[t] ~ C_s[t] + G_s[t]
)
government <- list(
eg1 <- TX_d[t] ~ parh1 * W * N_s[t],
eg2 <- H_s[t] ~ G_d[t] - TX_d[t] + H_s[t-1]
)
mod_sim <- gen_steady(sectors = list(households, production, government),
t = 60,
exogenous = list(G_d = 20), parameters = list(W = 1, parh1 = 0.2, parh2 = 0.6, parh3 = 0.4))
mod_sim <- mod_sim %>%
mutate(across(c(H_s, H_h), ~.x - lag(.x)),
across(c(N_s, N_d), ~.x * W)) %>%
select(-W) %>%
drop_na()
sim_ss <- mod_sim %>% slice(59)
sim_ss <- sim_ss %>%
pivot_longer(cols = -row_id) %>%
filter(name %!in% c('YD', 'Y')) %>%
filter(!str_detect(name, 'par'))
sim_ss
sim_ss <- sim_ss %>%
mutate(name = str_remove_all(name, '_.')) %>%
group_by(name) %>%
summarize(value = mean(value)) %>%
mutate(name = if_else(name == 'N', 'WB', name))
sim_ss
# Inflows (+ in the matrix)
sim_inflows <- sim_ss %>%
mutate(sector = case_when(
name == 'C' ~ 'pr',
name == 'G' ~ 'pr',
name == 'H' ~ 'gvt',
name == 'WB' ~ 'hh',
name == 'TX' ~ 'gvt'
))
# Outflows (- in the matrix)
sim_outflows <- sim_ss %>%
mutate(sector = case_when(
name == 'C' ~ 'hh',
name == 'G' ~ 'gvt',
name == 'H' ~ 'hh',
name == 'WB' ~ 'pr',
name == 'TX' ~ 'hh'
))
library(networkD3)
sim_nodes <- tibble(name = c(unique(sim_inflows$name),
unique(sim_inflows$sector),
str_c(unique(sim_inflows$sector), '1')),
node = 0:10)
links_sim_outflows <- sim_outflows %>%
left_join(sim_nodes, by = c('name')) %>%
left_join(sim_nodes, by = c('sector' = 'name')) %>%
rename(source = node.y, target = node.x)
# Since the inflows are the last column, we add the suffix to the sector column
links_sim_inflows <- sim_inflows %>%
mutate(sector = str_c(sector, '1')) %>%
left_join(sim_nodes, by = c('name')) %>%
left_join(sim_nodes, by = c('sector' = 'name')) %>%
rename(source = node.x, target = node.y)
links_sim <- bind_rows(links_sim_outflows, links_sim_inflows) %>%
select(source, target, value)
sim_nodes1 <- sim_nodes %>%
mutate(name = case_when(
name == 'C' ~ 'Consumption',
name == 'G' ~ 'Gvt. Expenditures',
name == 'H' ~ str_c('\u0394', ' Monetary balances'),
name == 'WB' ~ 'Wage Bills',
name == 'TX' ~ 'Taxes',
str_detect(name, 'pr') ~ 'Firms',
str_detect(name, 'gvt') ~ 'Government',
T ~ 'Households'
))
#sankey_sim <- networkD3::sankeyNetwork(Links = as.data.frame(links_sim), Nodes = as.data.frame(sim_nodes1),
#                         Source = 'source',
#                         Target = 'target',
#                         Value = 'value',
#                         NodeID = 'name',
#                         units = 'dollars',
#                         fontSize = 14)
#sankey_sim
networkD3::sankeyNetwork(Links = as.data.frame(links_sim), Nodes = as.data.frame(sim_nodes1),
Source = 'source',
Target = 'target',
Value = 'value',
NodeID = 'name',
units = 'dollars',
fontSize = 14)
1 + 1
widget2png(sn, "sankey.png")
rbokeh::widget2png(sn, "sankey.png")
install.packages('rbokeh')
rbokeh::widget2png(sn, "sankey.png")
sn
library(tidyverse)
library(formula.tools)
library(catchr)
library(blogdown)
source('../../../sfc/gen_steady_todo.R')
##### Not in operator
'%!in%' <- function(x,y)!('%in%'(x,y))
households <- list(
eh1 <- TX_s[t] ~ TX_d[t],
eh2 <- YD[t] ~ W * N_s[t] - TX_s[t],
eh3 <- C_d[t] ~ parh2 * YD[t] + parh3 * H_h[t-1],
eh4 <- H_h[t] ~ YD[t] - C_d[t] + H_h[t-1],
eh5 <- N_s[t] ~ N_d[t]
)
production <- list(
ep1 <- N_d[t] ~ Y[t] / W,
ep2 <- C_s[t] ~ C_d[t],
ep3 <- G_s[t] ~ G_d[t],
ep4 <- Y[t] ~ C_s[t] + G_s[t]
)
government <- list(
eg1 <- TX_d[t] ~ parh1 * W * N_s[t],
eg2 <- H_s[t] ~ G_d[t] - TX_d[t] + H_s[t-1]
)
mod_sim <- gen_steady(sectors = list(households, production, government),
t = 60,
exogenous = list(G_d = 20), parameters = list(W = 1, parh1 = 0.2, parh2 = 0.6, parh3 = 0.4))
mod_sim <- mod_sim %>%
mutate(across(c(H_s, H_h), ~.x - lag(.x)),
across(c(N_s, N_d), ~.x * W)) %>%
select(-W) %>%
drop_na()
sim_ss <- mod_sim %>% slice(59)
sim_ss <- sim_ss %>%
pivot_longer(cols = -row_id) %>%
filter(name %!in% c('YD', 'Y')) %>%
filter(!str_detect(name, 'par'))
sim_ss
sim_ss <- sim_ss %>%
mutate(name = str_remove_all(name, '_.')) %>%
group_by(name) %>%
summarize(value = mean(value)) %>%
mutate(name = if_else(name == 'N', 'WB', name))
sim_ss
# Inflows (+ in the matrix)
sim_inflows <- sim_ss %>%
mutate(sector = case_when(
name == 'C' ~ 'pr',
name == 'G' ~ 'pr',
name == 'H' ~ 'gvt',
name == 'WB' ~ 'hh',
name == 'TX' ~ 'gvt'
))
# Outflows (- in the matrix)
sim_outflows <- sim_ss %>%
mutate(sector = case_when(
name == 'C' ~ 'hh',
name == 'G' ~ 'gvt',
name == 'H' ~ 'hh',
name == 'WB' ~ 'pr',
name == 'TX' ~ 'hh'
))
library(networkD3)
sim_nodes <- tibble(name = c(unique(sim_inflows$name),
unique(sim_inflows$sector),
str_c(unique(sim_inflows$sector), '1')),
node = 0:10)
links_sim_outflows <- sim_outflows %>%
left_join(sim_nodes, by = c('name')) %>%
left_join(sim_nodes, by = c('sector' = 'name')) %>%
rename(source = node.y, target = node.x)
# Since the inflows are the last column, we add the suffix to the sector column
links_sim_inflows <- sim_inflows %>%
mutate(sector = str_c(sector, '1')) %>%
left_join(sim_nodes, by = c('name')) %>%
left_join(sim_nodes, by = c('sector' = 'name')) %>%
rename(source = node.x, target = node.y)
sim_nodes1 <- sim_nodes %>%
mutate(name = case_when(
name == 'C' ~ 'Consumption',
name == 'G' ~ 'Gvt. Expenditures',
name == 'H' ~ str_c('\u0394', ' Monetary balances'),
name == 'WB' ~ 'Wage Bills',
name == 'TX' ~ 'Taxes',
str_detect(name, 'pr') ~ 'Firms',
str_detect(name, 'gvt') ~ 'Government',
T ~ 'Households'
))
sn <- networkD3::sankeyNetwork(Links = as.data.frame(links_sim), Nodes = as.data.frame(sim_nodes1),
Source = 'source',
Target = 'target',
Value = 'value',
NodeID = 'name',
units = 'dollars',
fontSize = 14)
htmlwidgets::onRender(sn, 'function(el) { el.querySelector("svg").removeAttribute("viewBox") }')
sn
serve_site()
sn
serve_site()
library(sfcr)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
library(PKSFC)
rm(list=ls(all=T))
source("~/tmp/GodleyLavoieR(1)/chapter 5/sfc3.0.R")
lp=sfc.model("~/tmp/GodleyLavoieR(1)/chapter 5/ch5.txt",modelName="lp")
lp<-sfc.check(lp,fill=T)
lp
#simulates the model
datalp<-simulate(lp, maxIter=100)
#create 2 shocks in the model,a; an increase in short-term interest rate, b; a decrease in longterm interes rate.
init = datalp$baseline[66,]
init
blogdown::serve_site()
install.packages("blogdown")
install.packages("blogdown")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
library(tidyverse)
library(sfcr)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
paged.print = F
)
bs_pc <- sfcr_matrix(
columns = c("Households", "Firms", "Government", "Central bank", "sum"),
codes = c("h", "f", "g", "cb", "s"),
r1 = c("Money", h = "+Hh", cb = "-Hs"),
r2 = c("Bills", h = "+Bh", g = "-Bs", cb = "+Bcb"),
r3 = c("Balance", h = "-V", g = "+V")
)
sfcr_matrix_display(bs_pc, "bs")
tfm_pc <- sfcr_matrix(
columns = c("Households", "Firms", "Government", "CB current", "CB capital"),
codes = c("h", "f", "g", "cbc", "cbk"),
c("Consumption", h = "-C", f = "+C"),
c("Govt. Expenditures", f = "+G", g = "-G"),
c("Income", h = "+Y", f = "-Y"),
c("Int. payments", h = "+r[-1] * Bh[-1]", g = "-r[-1] * Bs[-1]", cbc = "+r[-1] * Bcb[-1]"),
c("CB profits", g = "+r[-1] * Bcb[-1]", cbc = "-r[-1] * Bcb[-1]"),
c("Taxes", h = "-TX", g = "+TX"),
c("Ch. Money", h = "-(Hh - Hh[-1])", cbk = "+(Hs - Hs[-1])"),
c("Ch. Bills", h = "-(Bh - Bh[-1])", g = "+(Bs - Bs[-1])", cbk = "-(Bcb - Bcb[-1])")
)
sfcr_matrix_display(tfm_pc)
pc_eqs <- sfcr_set(
Y ~ C + G,
YD ~ Y - TX + r[-1] * Bh[-1],
TX ~ theta * (Y + r[-1] * Bh[-1]),
V ~ V[-1] + (YD - C),
C ~ alpha1 * YD + alpha2 * V[-1],
Hh ~ V - Bh,
Hh1 ~ V * ((1 - lambda0) - lambda1 * r + lambda2 * ( YD/V )), # EQ 4.6A
Bh ~ V * (lambda0 + lambda1 * r - lambda2 * ( YD/V )),
Bs ~ Bs[-1] + (G + r[-1] * Bs[-1]) - (TX + r[-1] * Bcb[-1]),
Hs ~ Hs[-1] + Bcb - Bcb[-1],
Bcb ~ Bs - Bh
)
pc_ext <- sfcr_set(
# Exogenous
r ~ 0.025,
G ~ 20,
# Parameters
alpha1 ~ 0.6,
alpha2 ~ 0.4,
theta ~ 0.2,
lambda0 ~ 0.635,
lambda1 ~ 0.05,
lambda2 ~ 0.01
)
pc <- sfcr_baseline(
equations = pc_eqs,
external = pc_ext,
periods = 70,
hidden = c("Hh" = "Hs")
)
sfcr_validate(bs_pc, pc, "bs")
sfcr_validate(tfm_pc, pc, "tfm")
all.equal(pc$Hh, pc$Hh1)
sfcr_dag_cycles_plot(pc_eqs)
sfcr_dag_blocks_plot(pc_eqs)
sfcr_sankey(tfm_pc, pc)
shock1 <- sfcr_shock(
variables = sfcr_set(
r ~ 0.035
),
start = 5,
end = 60
)
pc2 <- sfcr_scenario(pc, scenario = shock1, periods = 60)
pc2 <- pc2 %>%
mutate(BV = Bh / V,
MV = Hh / V)
# If the read prefers to stick with base R functions, uncomment the following lines:
# pc2$BV <- pc2$B_h / pc2$V
# pc2$MV <- pc2$H_h / pc2$V
pc2_long <- pc2 %>%
pivot_longer(cols = -period)
pc2_long %>%
filter(name %in% c("BV", "MV")) %>%
ggplot(aes(x = period, y = value)) +
geom_line() +
facet_wrap(~ name, scales = 'free_y') +
labs(title = "Wealth alocation")
pc2_long %>%
filter(name %in% c("YD", "C")) %>%
ggplot(aes(x = period, y = value)) +
geom_line(aes(linetype = name)) +
labs(title = "Evolution of disposable income and household consumption",
subtitle = "Following an increase of 100 points in the rate of interest")
values <- seq(0.61, 0.8, 0.01)
alpha1Exp <- sfcr_expand(x = pc_ext, variable = alpha1, values = values)
#
pc_multi_bl <- sfcr_multis(alpha1Exp, pc_eqs, periods = 50)
shock1 <- sfcr_shock(
variables = sfcr_set(
r ~ 0.035
),
start = 5,
end = 50
)
pc_multi_scn <- sfcr_multis(pc_multi_bl, shock1, periods = 50)
# We also need to expand the color palettes
colourCount <- 20 # number of levels
getPalette <- grDevices::colorRampPalette(RColorBrewer::brewer.pal(6, "GnBu")[c(3:6)])
bind_rows(pc_multi_scn) %>%
mutate(simulation = as_factor(simulation)) %>%
pivot_longer(cols = -c(period, simulation)) %>%
filter(name %in% c("Y", "YD", "C")) %>%
ggplot(aes(x = period, y = value, color = simulation)) +
geom_line() +
theme(legend.position = "bottom") +
scale_color_manual("alpha10",
values = getPalette(20),
labels = as.character(values)) +
facet_wrap(~ name, scales = 'free_y')
blogdown::serve_site()
blogdown::stop_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::server_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
