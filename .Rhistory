library(blogdown)
library(bookdown)
serve_site()
blogdown:::new_post_addin()
knitr::opts_chunk$set(echo = TRUE)
source('../../../sfc/gen_steady_todo.R')
library(tidyverse)
library(formula.tools)
library(catchr)
source('../../../sfc/gen_steady_todo.R')
##### Not in operator
'%!in%' <- function(x,y)!('%in%'(x,y))
households <- list(
eh1 <- TX_s[t] ~ TX_d[t],
eh2 <- YD[t] ~ W * N_s[t] - TX_s[t],
eh3 <- C_d[t] ~ parh2 * YD[t] + parh3 * H_h[t-1],
eh4 <- H_h[t] ~ YD[t] - C_d[t] + H_h[t-1],
eh5 <- N_s[t] ~ N_d[t]
)
production <- list(
ep1 <- N_d[t] ~ Y[t] / W,
ep2 <- C_s[t] ~ C_d[t],
ep3 <- G_s[t] ~ G_d[t],
ep4 <- Y[t] ~ C_s[t] + G_s[t]
)
government <- list(
eg1 <- TX_d[t] ~ parh1 * W * N_s[t],
eg2 <- H_s[t] ~ G_d[t] - TX_d[t] + H_s[t-1]
)
mod_sim <- gen_steady(sectors = list(households, production, government),
t = 60,
exogenous = list(G_d = 20), parameters = list(W = 1, parh1 = 0.2, parh2 = 0.6, parh3 = 0.4))
mod_sim <- mod_sim %>%
mutate(across(c(H_s, H_h), ~.x - lag(.x)),
across(c(N_s, N_d), ~.x * W)) %>%
select(-W) %>%
drop_na()
sim_ss <- mod_sim %>% slice(59)
sim_ss <- sim_ss %>%
pivot_longer(cols = -row_id) %>%
filter(name %!in% c('YD', 'Y')) %>%
filter(!str_detect(name, 'par'))
sim_ss
sim_ss <- sim_ss %>%
mutate(name = str_remove_all(name, '_.')) %>%
group_by(name) %>%
summarize(value = mean(value)) %>%
mutate(name = if_else(name == 'N', 'WB', name))
sim_ss
# Inflows (+ in the matrix)
sim_inflows <- sim_ss %>%
mutate(sector = case_when(
name == 'C' ~ 'pr',
name == 'G' ~ 'pr',
name == 'H' ~ 'gvt',
name == 'WB' ~ 'hh',
name == 'TX' ~ 'gvt'
))
# Outflows (- in the matrix)
sim_outflows <- sim_ss %>%
mutate(sector = case_when(
name == 'C' ~ 'hh',
name == 'G' ~ 'gvt',
name == 'H' ~ 'hh',
name == 'WB' ~ 'pr',
name == 'TX' ~ 'hh'
))
library(networkD3)
sim_nodes <- tibble(name = c(unique(sim_inflows$name),
unique(sim_inflows$sector),
str_c(unique(sim_inflows$sector), '1')),
node = 0:10)
links_sim_outflows <- sim_outflows %>%
left_join(sim_nodes, by = c('name')) %>%
left_join(sim_nodes, by = c('sector' = 'name')) %>%
rename(source = node.y, target = node.x)
# Since the inflows are the last column, we add the suffix to the sector column
links_sim_inflows <- sim_inflows %>%
mutate(sector = str_c(sector, '1')) %>%
left_join(sim_nodes, by = c('name')) %>%
left_join(sim_nodes, by = c('sector' = 'name')) %>%
rename(source = node.x, target = node.y)
links_sim <- bind_rows(links_sim_outflows, links_sim_inflows) %>%
select(source, target, value)
sim_nodes1 <- sim_nodes %>%
mutate(name = case_when(
name == 'C' ~ 'Consumption',
name == 'G' ~ 'Gvt. Expenditures',
name == 'H' ~ str_c('\u0394', ' Monetary balances'),
name == 'WB' ~ 'Wage Bills',
name == 'TX' ~ 'Taxes',
str_detect(name, 'pr') ~ 'Firms',
str_detect(name, 'gvt') ~ 'Government',
T ~ 'Households'
))
#sankey_sim <- networkD3::sankeyNetwork(Links = as.data.frame(links_sim), Nodes = as.data.frame(sim_nodes1),
#                         Source = 'source',
#                         Target = 'target',
#                         Value = 'value',
#                         NodeID = 'name',
#                         units = 'dollars',
#                         fontSize = 14)
#sankey_sim
networkD3::sankeyNetwork(Links = as.data.frame(links_sim), Nodes = as.data.frame(sim_nodes1),
Source = 'source',
Target = 'target',
Value = 'value',
NodeID = 'name',
units = 'dollars',
fontSize = 14)
1 + 1
widget2png(sn, "sankey.png")
rbokeh::widget2png(sn, "sankey.png")
install.packages('rbokeh')
rbokeh::widget2png(sn, "sankey.png")
sn
library(tidyverse)
library(formula.tools)
library(catchr)
library(blogdown)
source('../../../sfc/gen_steady_todo.R')
##### Not in operator
'%!in%' <- function(x,y)!('%in%'(x,y))
households <- list(
eh1 <- TX_s[t] ~ TX_d[t],
eh2 <- YD[t] ~ W * N_s[t] - TX_s[t],
eh3 <- C_d[t] ~ parh2 * YD[t] + parh3 * H_h[t-1],
eh4 <- H_h[t] ~ YD[t] - C_d[t] + H_h[t-1],
eh5 <- N_s[t] ~ N_d[t]
)
production <- list(
ep1 <- N_d[t] ~ Y[t] / W,
ep2 <- C_s[t] ~ C_d[t],
ep3 <- G_s[t] ~ G_d[t],
ep4 <- Y[t] ~ C_s[t] + G_s[t]
)
government <- list(
eg1 <- TX_d[t] ~ parh1 * W * N_s[t],
eg2 <- H_s[t] ~ G_d[t] - TX_d[t] + H_s[t-1]
)
mod_sim <- gen_steady(sectors = list(households, production, government),
t = 60,
exogenous = list(G_d = 20), parameters = list(W = 1, parh1 = 0.2, parh2 = 0.6, parh3 = 0.4))
mod_sim <- mod_sim %>%
mutate(across(c(H_s, H_h), ~.x - lag(.x)),
across(c(N_s, N_d), ~.x * W)) %>%
select(-W) %>%
drop_na()
sim_ss <- mod_sim %>% slice(59)
sim_ss <- sim_ss %>%
pivot_longer(cols = -row_id) %>%
filter(name %!in% c('YD', 'Y')) %>%
filter(!str_detect(name, 'par'))
sim_ss
sim_ss <- sim_ss %>%
mutate(name = str_remove_all(name, '_.')) %>%
group_by(name) %>%
summarize(value = mean(value)) %>%
mutate(name = if_else(name == 'N', 'WB', name))
sim_ss
# Inflows (+ in the matrix)
sim_inflows <- sim_ss %>%
mutate(sector = case_when(
name == 'C' ~ 'pr',
name == 'G' ~ 'pr',
name == 'H' ~ 'gvt',
name == 'WB' ~ 'hh',
name == 'TX' ~ 'gvt'
))
# Outflows (- in the matrix)
sim_outflows <- sim_ss %>%
mutate(sector = case_when(
name == 'C' ~ 'hh',
name == 'G' ~ 'gvt',
name == 'H' ~ 'hh',
name == 'WB' ~ 'pr',
name == 'TX' ~ 'hh'
))
library(networkD3)
sim_nodes <- tibble(name = c(unique(sim_inflows$name),
unique(sim_inflows$sector),
str_c(unique(sim_inflows$sector), '1')),
node = 0:10)
links_sim_outflows <- sim_outflows %>%
left_join(sim_nodes, by = c('name')) %>%
left_join(sim_nodes, by = c('sector' = 'name')) %>%
rename(source = node.y, target = node.x)
# Since the inflows are the last column, we add the suffix to the sector column
links_sim_inflows <- sim_inflows %>%
mutate(sector = str_c(sector, '1')) %>%
left_join(sim_nodes, by = c('name')) %>%
left_join(sim_nodes, by = c('sector' = 'name')) %>%
rename(source = node.x, target = node.y)
sim_nodes1 <- sim_nodes %>%
mutate(name = case_when(
name == 'C' ~ 'Consumption',
name == 'G' ~ 'Gvt. Expenditures',
name == 'H' ~ str_c('\u0394', ' Monetary balances'),
name == 'WB' ~ 'Wage Bills',
name == 'TX' ~ 'Taxes',
str_detect(name, 'pr') ~ 'Firms',
str_detect(name, 'gvt') ~ 'Government',
T ~ 'Households'
))
sn <- networkD3::sankeyNetwork(Links = as.data.frame(links_sim), Nodes = as.data.frame(sim_nodes1),
Source = 'source',
Target = 'target',
Value = 'value',
NodeID = 'name',
units = 'dollars',
fontSize = 14)
htmlwidgets::onRender(sn, 'function(el) { el.querySelector("svg").removeAttribute("viewBox") }')
sn
serve_site()
sn
serve_site()
library(sfcr)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
library(PKSFC)
rm(list=ls(all=T))
source("~/tmp/GodleyLavoieR(1)/chapter 5/sfc3.0.R")
lp=sfc.model("~/tmp/GodleyLavoieR(1)/chapter 5/ch5.txt",modelName="lp")
lp<-sfc.check(lp,fill=T)
lp
#simulates the model
datalp<-simulate(lp, maxIter=100)
#create 2 shocks in the model,a; an increase in short-term interest rate, b; a decrease in longterm interes rate.
init = datalp$baseline[66,]
init
